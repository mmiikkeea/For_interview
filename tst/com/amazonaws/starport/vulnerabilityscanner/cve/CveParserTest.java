package com.amazonaws.starport.vulnerabilityscanner.cve;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.stream.XMLStreamException;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xml.sax.SAXException;

import com.amazonaws.starport.vulnerabilityscanner.model.CveModel;

public class CveParserTest {
    private final Parser xmlParser = new Parser();

    @Before
    public void setUp() throws Exception {
    }

    @Test
    public void apptest() throws IOException, XMLStreamException, SAXException,
            ParserConfigurationException {
        final String mysqlLayer = "mysql";
        Assert.assertEquals(mysqlLayer, parsedCve().get(0).getAppList().get(0)
                .getApplicationName());
    }

    @Test
    public void getOsTest() throws IOException, XMLStreamException,
            SAXException, ParserConfigurationException {
        final List<String> expected = new ArrayList<>();
        expected.add("cpe:/o:canonical:ubuntu_linux:13.10");
        expected.add("cpe:/o:canonical:ubuntu_linux:12.10");
        expected.add("cpe:/o:canonical:ubuntu_linux:12.04:-:lts");
        Assert.assertEquals(expected, parsedCve().get(3).getOs());
    }

    @Test
    public void getSummaryTest() throws IOException, XMLStreamException,
            SAXException, ParserConfigurationException {
        final String expected = "Buffer overflow in client/mysql.cc in Oracle MySQL and MariaDB before 5.5.35 allows remote "
                + "database servers to cause a denial of service (crash) and possibly execute arbitrary code "
                + "via a long server version string.";
        Assert.assertEquals(expected, parsedCve().get(0).getSummary());
    }

    public List<CveModel> parsedCve() throws IOException, XMLStreamException,
            SAXException, ParserConfigurationException {
        return xmlParser.parsedCve("CVEfolder/nvdcve-2.0-2014-partial.xml");
    }
}
